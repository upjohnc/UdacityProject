{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 import numpy\
import scipy.stats\
import pandas\
\
def compareAverages(list1, list2):\
    """\
    Performs a t-test on two sets of baseball data (left-handed and right-handed hitters).\
\
    You will be given a csv file that has three columns.  A player's\
    name, handedness (L for lefthanded or R for righthanded) and their\
    career batting average (called 'avg'). You can look at the csv\
    file via the following link:\
    https://www.dropbox.com/s/xcn0u2uxm8c4n6l/baseball_data.csv\
    \
    Write a function that will read that the csv file into a pandas data frame,\
    and run Welch's t-test on the two cohorts defined by handedness.\
    \
    One cohort should be a data frame of right-handed batters. And the other\
    cohort should be a data frame of left-handed batters.\
    \
    We have included the scipy.stats library to help you write\
    or implement Welch's t-test:\
    http://docs.scipy.org/doc/scipy/reference/stats.html\
    \
    With a significance level of 95%, if there is no difference\
    between the two cohorts, return a tuple consisting of\
    True, and then the tuple returned by scipy.stats.ttest.  \
    \
    If there is a difference, return a tuple consisting of\
    False, and then the tuple returned by scipy.stats.ttest.\
    \
    For example, the tuple that you return may look like:\
    (True, (9.93570222, 0.000023))\
    """\
    \
    \
    listL = df.ix[df['handedness'] == 'L']['avg']\
    listR = df.ix[df['handedness'] == 'R']['avg']\
    \
    result = scipy.stats.ttest_ind(list1, list2, equal_var=False)\
\
    if tReturn[1] <= .05:\
        result = False\
    else:\
        result = True\
    return (result, (tReturn, nReturn))\
}